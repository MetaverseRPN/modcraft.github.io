{
  "name": "nbt",
  "version": "0.3.0",
  "description": "A parser for NBT archives",
  "keywords": [
    "nbt",
    "minecraft"
  ],
  "homepage": "https://github.com/sjmulder/nbt-js",
  "author": {
    "name": "Sijmen Mulder",
    "email": "sjmulder@gmail.com"
  },
  "main": "nbt",
  "repository": {
    "type": "git",
    "url": "https://github.com/sjmulder/nbt-js.git"
  },
  "engines": [
    "node >=0.10"
  ],
  "devDependencies": {
    "grunt": "~0.4.4",
    "grunt-cli": "~0.1.13",
    "grunt-jasmine-node": "~0.2.1",
    "grunt-contrib-jshint": "~0.9.2",
    "grunt-contrib-watch": "~0.6.0"
  },
  "readme": "NBT.js\n======\n\nby Sijmen Mulder.\n\nNBT.js is a JavaScript parser [NBT](http://www.minecraft.net/docs/NBT.txt) archives, for use with [Node.js](http://nodejs.org/).\n\n\nUsage\n-----\n\nAfter `var nbt = require('nbt')`, you can use `nbt.parse(data, callback)` to convert NBT data into a regular JavaScript object.\n\n    var fs = require('fs'),\n    \tnbt = require('nbt');\n\n    fs.readFile('bigtest.nbt', function(error, data) {\n    \tif (error) throw error;\n\n\t\tnbt.parse(data, function(error, result) {\n\t    \tconsole.log(result.Level.stringTest);\n\t    \tconsole.log(result.Level['nested compound test']);\n\t\t});\n    });\n\nIf the data is gzipped, it is automatically decompressed first.\n\nTag names are copied verbatim, and as some names are not valid JavaScript names, use of the indexer may be required â€“ such as with the nested compound test in the example above.\n\nByte arrays are returned as Node.js [`Buffer`](http://nodejs.org/api/buffer.html) objects.\n\n\nDevelopment and testing\n-----------------------\n\n[Grunt](http://gruntjs.com) is used as a task runner:\n\n    grunt jshint        # Check code quality\n    grunt jasmine_node  # Run tests\n    grunt watch         # Do the above two on every file change\n\nThe test coverage is very basic and could be extended.\n\n\nKnown issues\n------------\n\n * [64 bit integers overflow](https://github.com/sjmulder/nbt-js/issues/1)\n * Tests are minimal, hence the validity of many of the parsing function is uncertain.\n\n\nCopyright\n---------\n\nI, the copyright holder of this work, hereby release it into the public domain. This applies worldwide.\n\nIn case this is not legally possible: I grant anyone the right to use this work for any purpose, without any conditions, unless such conditions are required by law.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/sjmulder/nbt-js/issues"
  },
  "_id": "nbt@0.3.0",
  "dist": {
    "shasum": "d8eeb9ac0e2a38469d9da3eb510b0537d1474040"
  },
  "_from": "nbt@^0.3.0",
  "_resolved": "https://registry.npmjs.org/nbt/-/nbt-0.3.0.tgz"
}
