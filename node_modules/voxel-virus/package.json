{
  "name": "voxel-virus",
  "description": "Spread a virus in voxel.js",
  "version": "0.2.1",
  "homepage": "https://github.com/shama/voxel-virus",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/voxel-virus.git"
  },
  "bugs": {
    "url": "https://github.com/shama/voxel-virus/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/voxel-portal-gun/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "start": "cd example; npm start",
    "gh-pages": "cd example; npm run-script gh-pages"
  },
  "peerDependencies": {
    "voxel-engine": ">= 0.17.0"
  },
  "readme": "# voxel-virus\n\nSpread a virus in [voxel.js](http://voxeljs.com).\n\nMight make a good base for a fire or water module as well ;)\n\n# example\n\n[View this example](http://shama.github.com/voxel-virus)\n\n```js\n// create a virus\nvar virus = require('voxel-virus')({\n  \n  // pass a copy of the game\n  game: game,\n\n  // which material index of virus\n  // can use a material name instead, ie 'obsidian'\n  // or false to not change the material\n  material: 0,\n\n  // how fast in milliseconds to spread\n  rate: 3000,\n\n  // how many iterations before dying\n  // set to 0 to never decay (and eventually crash your game)\n  decay: 10,\n\n  // how virulent; between 0 and 1\n  // 0 wont spread\n  // 1 spreads to all surrounding blocks\n  virulence: 0.5,\n\n  // how it spreads\n  // by default it will remove the block\n  // and spread to surrounding blocks\n  how: function(block) {\n    var self = this;\n    if (self.decay > 0) level++;\n    self.game.setBlock(block, 0);\n    self.around(block).forEach(function(b) {\n      self.infect(b, level);\n    });\n  }\n});\n\n// on fire, infect block\ngame.on('fire', function() {\n  var vec = game.cameraVector();\n  var pos = game.cameraPosition();\n  virus.infect(game.raycast(pos, vec, 100).voxel);\n});\n\n// on tick, spread the virus\ngame.on('tick', virus.tick.bind(virus));\n```\n\n# api\n\n## virus.infect([block, level])\nSet `block` to position of block `[0, 0, 0]` to infect. `level` is the\ncurrent number of iteration the infection is on.\n\nTo infect the block you're looking at:\n\n```js\ngame.on('fire', function() {\n  var vec = game.cameraVector();\n  var pos = game.cameraPosition();\n  virus.infect(game.raycast(pos, vec, 100).voxel);\n});\n```\n\n## virus.tick(delta)\nPush the iterations forward. Needs to be added to the game tick to keep in time\nwith the game simulation.\n\n```js\ngame.on('tick', virus.tick.bind(virus));\n```\n\n## virus.around(block)\nReturns block positions around the given `block`. Uses `virus.virulence` to\nrandomly *not* select blocks.\n\n```js\nvar around = virus.around([0, 0, 0]);\n// around equals an array of blocks up, down, left, right, front and back\n```\n\n## virus.infected\nAn array of blocks that are currently infected with time or iteration prepended.\n\n```js\nvirus.infected = [\n  [time, block],\n  [time, block],\n  // ...\n];\n```\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install voxel-virus\n```\n\nUse [browserify](http://browserify.org) to `require('voxel-virus')`.\n\n## release history\n* 0.2.1 - update for voxel-engine@0.17\n* 0.2.0 - infect doesnt default to the block you're looking at \n* 0.1.1 - update for voxel-engine@0.16.3. infect doesnt ignore air voxels.\n* 0.1.0 - initial release\n\n## license\nCopyright (c) 2013 Kyle Robinson Young<br/>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "voxel-virus@0.2.1",
  "dist": {
    "shasum": "a12acab5cce3cf75b044bce5ba0f7116115ab084"
  },
  "_resolved": "git://github.com/deathcap/voxel-virus.git#d133c3f3e81ba48d99c50e5bbdebb06da297a269",
  "_from": "voxel-virus@git://github.com/deathcap/voxel-virus.git"
}
