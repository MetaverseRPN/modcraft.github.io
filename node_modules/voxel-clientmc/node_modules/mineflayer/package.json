{
  "name": "mineflayer",
  "version": "1.0.0",
  "description": "create minecraft bots with a stable, high level API",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andrewrk/mineflayer.git"
  },
  "license": "MIT",
  "browser": "browser.js",
  "dependencies": {
    "requireindex": "~1.0.0",
    "minecraft-protocol": "git+https://github.com/deathcap/node-minecraft-protocol.git#e93ea9baaf39472c42fe2ae8734eed30f863dd04",
    "quotemeta": "0.0.0",
    "vec3": "~0.1.3",
    "lodash": "^2.4.1",
    "websocket-stream": "^0.5.1"
  },
  "devDependencies": {
    "mocha": "~1.7.4",
    "batch": "~0.2.1"
  },
  "readme": "# Mineflayer [![NPM version](https://badge.fury.io/js/mineflayer.png)](http://badge.fury.io/js/mineflayer)\n\nCreate Minecraft bots with a powerful, stable, and high level JavaScript API.\n\n## Features\n\n * Supports Minecraft 1.6.2.\n * Entity knowledge and tracking.\n * Block knowledge. You can query the world around you.\n * Basic physics and movement - currently blocks are either \"solid\" or \"empty\".\n * Attacking entities and using vehicles.\n * Inventory management.\n * Crafting, chests, dispensers, enchantment tables.\n * Digging and building.\n * Miscellaneous stuff such as knowing your health and whether it is raining.\n * Activating blocks and using items.\n * Chat.\n\n### Roadmap\n\n * Brewing stands, and anvils.\n * Better physics (support doors, ladders, water, etc).\n\n## Usage\n\n### Echo Example\n```js\nvar mineflayer = require('mineflayer');\nvar bot = mineflayer.createBot({\n  host: \"localhost\", // optional\n  port: 25565,       // optional\n  username: \"email@example.com\", // email and password are required only for\n  password: \"12345678\",          // online-mode=true servers\n});\nbot.on('chat', function(username, message) {\n  if (username === bot.username) return;\n  bot.chat(message);\n});\n```\n\n#### More Examples\n\n * In the [examples](https://github.com/andrewrk/mineflayer/tree/master/examples) folder.\n * [vogonistic's REPL bot](https://gist.github.com/4631678)\n\n## Third Party Plugins\n\nMineflayer is pluggable; anyone can create a plugin that adds an even\nhigher level API on top of Mineflayer.\n\n * [navigate](https://github.com/andrewrk/mineflayer-navigate/) - get around\n   easily using A* pathfinding. [YouTube Demo](http://www.youtube.com/watch?v=O6lQdmRz8eE)\n * [radar](https://github.com/andrewrk/mineflayer-radar/) - web based radar\n   interface using canvas and socket.io. [YouTube Demo](http://www.youtube.com/watch?v=FjDmAfcVulQ)\n * [blockfinder](https://github.com/Darthfett/mineflayer-blockFinder) - find blocks in the 3D world\n * [scaffold](https://github.com/andrewrk/mineflayer-scaffold) - get to\n   a target destination even if you have to build or break blocks to do so.\n   [YouTube Demo](http://youtu.be/jkg6psMUSE0)\n\n## Projects Using Mineflayer\n\n * [rom1504/rbot](https://github.com/rom1504/rbot)\n   - [YouTube - building a spiral staircase](http://www.youtube.com/watch?v=UM1ZV5200S0)\n   - [YouTube - replicating a building](http://www.youtube.com/watch?v=0cQxg9uDnzA)\n * [Darthfett/Helperbot](https://github.com/Darthfett/Helperbot)\n * [vogonistic/voxel](https://github.com/vogonistic/mineflayer-voxel) - visualize what\n   the bot is up to using voxel.js\n * [JonnyD/Skynet] (https://github.com/JonnyD/Skynet) -  log player activity onto an online API\n\n## Installation\n\n### Linux / OSX\n\n`npm install mineflayer`\n\n### Windows\n\n1. Follow the Windows instructions from\n   [node-minecraft-protocol](https://github.com/andrewrk/node-minecraft-protocol#windows)\n2. `npm install mineflayer`\n\n## Documentation\n\n * See [doc/api.md](https://github.com/andrewrk/mineflayer/blob/master/doc/api.md).\n * See [doc/history.md](https://github.com/andrewrk/mineflayer/blob/master/doc/history.md).\n * See [examples/](https://github.com/andrewrk/mineflayer/tree/master/examples).\n\n## Testing\n\n`npm test`\n\n## Updating to a newer protocol version\n\n1. Wait for a new version of\n   [node-minecraft-protocol](https://github.com/andrewrk/node-minecraft-protocol)\n   to be released which supports the new Minecraft version.\n2. `npm install --save minecraft-protocol@latest`\n3. Apply the [protocol changes](http://wiki.vg/Protocol_History) where necessary.\n4. Run the test suite. See Testing above.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andrewrk/mineflayer/issues"
  },
  "homepage": "https://github.com/andrewrk/mineflayer",
  "_id": "mineflayer@1.0.0",
  "dist": {
    "shasum": "ff26d701919914d0168b2f720bf7fe823dc3f231"
  },
  "_resolved": "git://github.com/deathcap/mineflayer.git#f06dfc9d0b8432e4b23a958c86858005b1dee1d6",
  "_from": "mineflayer@git://github.com/deathcap/mineflayer.git#f06dfc9d0b8432e4b23a958c86858005b1dee1d6"
}
